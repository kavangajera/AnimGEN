# routes/video_router.py
from flask import Blueprint, request, jsonify, send_file
import tempfile
import subprocess
from pathlib import Path
import os
import time


video_routes = Blueprint('video_routes', __name__)

def create_manim_file(code, temp_dir):
    file_path = os.path.join(temp_dir, "scene.py")
    try:
        print("[INFO] Creating Manim code file...")
        with open(file_path, "w") as f:
            f.write(code)
        print("[SUCCESS] Manim code file created at:", file_path)
    except Exception as e:
        print("[ERROR] Failed to create Manim file:", str(e))
        raise e
    return file_path

def generate_video(manim_file, temp_dir):
    try:
        print("[INFO] Starting video generation with Manim...")
        start_time = time.time()
        
        cmd = [
            "manim",
            "-pql",  # Fast rendering (use -pqh for high quality)
            manim_file,
            "SquareToCircleToText"
        ]
        
        print("[DEBUG] Running command:", " ".join(cmd))
        
        result = subprocess.run(
            cmd,
            cwd=temp_dir,
            capture_output=True,
            text=True
        )
        
        if result.returncode != 0:
            print("[ERROR] Manim failed with stderr:")
            print(result.stderr)
            return None, f"Manim error: {result.stderr}"
        
        # Updated media directory path
        media_dir = os.path.join(temp_dir, "media", "videos", "scene", "1080p60")
        print("[INFO] Looking for video file in:", media_dir)
        
        video_files = list(Path(media_dir).glob("*.mp4"))
        
        if not video_files:
            print("[ERROR] No video file found in output directory!")
            return None, "No video file generated by Manim."
        
        video_file = video_files[0]
        print("[SUCCESS] Video generated at:", video_file)
        
        end_time = time.time()
        print(f"[INFO] Video generation took {end_time - start_time:.2f} seconds.")
        
        return str(video_file), None
        
    except Exception as e:
        print("[ERROR] Exception during video generation:", str(e))
        return None, str(e)


@video_routes.route('/generate-video', methods=['POST'])
def generate_video_route():
    try:
        print("[INFO] Received request to generate video...")
        data = request.json
        manim_code = data.get('code')
        
        if not manim_code:
            print("[ERROR] No Manim code provided in the request.")
            return jsonify({'error': 'No Manim code provided'}), 400
        
        with tempfile.TemporaryDirectory() as temp_dir:
            print("[INFO] Using temporary directory:", temp_dir)
            manim_file = create_manim_file(manim_code, temp_dir)
            video_path, error = generate_video(manim_file, temp_dir)
            
            if error:
                print("[ERROR] Video generation failed:", error)
                return jsonify({"error": error}), 500
            
            print("[INFO] Sending generated video to client...")
            return send_file(
                video_path,
                mimetype='video/mp4',
                as_attachment=True,
                download_name='animation.mp4'
            )
            
    except Exception as e:
        print(f"[ERROR] Exception in generate-video route: {str(e)}")
        return jsonify({"error": str(e)}), 500
